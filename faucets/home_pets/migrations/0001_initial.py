# Generated by Django 4.1.5 on 2023-01-31 19:27

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ForageAdd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forage_type', models.IntegerField(choices=[(1, 'крупы'), (2, 'Сухие корма'), (3, 'Влажные корма'), (4, 'Фарш для собак')], null=True, verbose_name='Вид корма')),
                ('forage_weight', models.IntegerField()),
                ('name', models.CharField(help_text='Фамилия и имя', max_length=30, verbose_name='Волонтер')),
                ('phone', models.CharField(max_length=16, unique=True, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{8,15}$')], verbose_name='Телефон')),
            ],
        ),
        migrations.CreateModel(
            name='HelpList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('help_id', models.CharField(help_text='Enter field documentation', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='HomePet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pets', models.IntegerField(choices=[(1, 'Собака'), (2, 'Кот'), (3, 'Птица'), (4, 'Насекомое')], help_text='Вид питомца', verbose_name='Категория')),
                ('foto', models.ImageField(blank=True, upload_to='images', verbose_name='Фото')),
                ('name_pets', models.CharField(help_text='Кличка', max_length=20, verbose_name='Кличка')),
                ('age_pets', models.IntegerField(help_text='Возраст', verbose_name='Возраст')),
                ('text_about_pets', models.TextField(help_text='Замечания', max_length=200, verbose_name='Кратко о питомце')),
            ],
        ),
        migrations.CreateModel(
            name='ItemAdd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_type', models.IntegerField(choices=[(1, 'Ошейники, поводки, намордники'), (2, 'Опилки и солома'), (3, 'Посуда'), (4, 'Теплые вещи'), (5, 'Будки')], null=True, verbose_name='Категория')),
                ('item_qty', models.IntegerField()),
                ('which_item', models.CharField(help_text='Замечания', max_length=100, verbose_name='Вещь')),
                ('name', models.CharField(help_text='Фамилия и имя', max_length=30, verbose_name='Волонтер')),
                ('phone', models.CharField(max_length=16, unique=True, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{8,15}$')], verbose_name='Телефон')),
            ],
        ),
        migrations.CreateModel(
            name='MedicamentosAdd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('med_type', models.IntegerField(choices=[(1, 'цефтриаксон'), (2, 'новокаин'), (3, 'гискан'), (4, 'гамавит'), (5, 'катозал'), (6, 'антитокс'), (7, 'фоспренил'), (8, 'энтеросгель'), (9, 'препараты от глистов'), (10, 'препараты от блох,клещей'), (11, 'для заживления ран')], verbose_name='Препарат')),
                ('med_weight', models.IntegerField()),
                ('name', models.CharField(help_text='Фамилия и имя', max_length=30, verbose_name='Волонтер')),
                ('phone', models.CharField(max_length=16, unique=True, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{8,15}$')], verbose_name='Телефон')),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pets', models.CharField(help_text='Enter field documentation', max_length=20)),
                ('text_news', models.TextField(help_text='Enter field documentation', max_length=20)),
                ('data', models.DateTimeField(blank=True, verbose_name='Дата')),
            ],
        ),
        migrations.CreateModel(
            name='OrderHelp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Имя', max_length=20, verbose_name='Волонтер')),
                ('help_type', models.CharField(max_length=10)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=16, unique=True, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{8,15}$')], verbose_name='Телефон')),
            ],
        ),
        migrations.CreateModel(
            name='OrderPet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Фамилия и имя', max_length=30, verbose_name='Заводчик')),
                ('phone', models.CharField(max_length=16, unique=True, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{8,15}$')], verbose_name='Телефон')),
                ('pets', models.CharField(help_text='Питомец', max_length=20, verbose_name='Кличка')),
                ('message', models.TextField(help_text='Замечания', max_length=100, verbose_name='Замечания')),
                ('order_data', models.DateTimeField(verbose_name='Дата')),
            ],
        ),
        migrations.CreateModel(
            name='OrderPetTemporarity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Фамилия и имя', max_length=30, verbose_name='Волонтер')),
                ('phone', models.CharField(max_length=16, unique=True, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{8,15}$')], verbose_name='Телефон')),
                ('pets', models.CharField(help_text='Питомец', max_length=20, verbose_name='Кличка')),
                ('order_data', models.DateTimeField(verbose_name='Дата')),
                ('start_time', models.DateTimeField(verbose_name='Начало')),
                ('end_time', models.DateTimeField(verbose_name='Окончание')),
                ('message', models.TextField(help_text='Замечания', max_length=100, verbose_name='Замечания')),
            ],
        ),
        migrations.CreateModel(
            name='TransportationOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driver_name', models.CharField(help_text='Инициалы', max_length=30, verbose_name='Перевозчик')),
                ('phone', models.CharField(max_length=16, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{8,15}$')], verbose_name='Телефон')),
                ('transport_type', models.IntegerField(choices=[(1, 'Доставка еды, медикаментов и других небольших вещей'), (2, 'Доставка сена или соломы, строительных материлов для будок и других крупногабаритных вещей'), (3, 'Транспортировка небольших собак и котов'), (4, 'Транспортировка больших собак')], null=True, verbose_name='Вид перевозки')),
                ('order_data', models.DateTimeField(verbose_name='Дата')),
                ('start_point', models.CharField(max_length=30, verbose_name='Погрузить')),
                ('end_point', models.CharField(max_length=30, verbose_name='Выгрузить')),
                ('message', models.TextField(help_text='Замечания', max_length=100, verbose_name='Замечания')),
            ],
        ),
        migrations.CreateModel(
            name='VolOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_vol', models.CharField(help_text='Фамилия и имя', max_length=30, verbose_name='Волонтер')),
                ('phone', models.CharField(max_length=16, unique=True, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{8,15}$')])),
                ('vol_type', models.IntegerField(choices=[(1, 'Хочу помогать на постоянной основе(расписание можно подобрать так, как будет вам удобно'), (2, 'Готов помогать иногда.Хочу выбрать удобное для меня время')], null=True, verbose_name='vol_type')),
                ('data_order', models.DateTimeField(verbose_name='Дата')),
                ('start_time', models.DateTimeField(verbose_name='Начало')),
                ('end_time', models.DateTimeField(verbose_name='Окончание')),
                ('message', models.CharField(help_text='Замечания', max_length=100)),
            ],
        ),
    ]
